---
import { Image } from 'astro:assets';
import type { CollectionEntry } from 'astro:content';
import { formatDate } from '../utils/date';

const post: CollectionEntry<'blog'> = Astro.props.post;
---

<article class="group bg-white border border-gray-200 rounded-lg shadow-sm hover:shadow-lg transition-all duration-300 dark:bg-gray-800 dark:border-gray-700 overflow-hidden">
  <a href={`/blog/${post.id}`} class="block">
    {post.data.heroImage ? (
      <div class="flex flex-col md:flex-row">
        <div class="md:w-1/3 relative overflow-hidden">
          <Image
            class="w-full h-48 md:h-full object-cover group-hover:scale-105 transition-transform duration-300"
            src={post.data.heroImage}
            alt={`${post.data.title}的封面图片`}
            loading="lazy"
          />
          <div class="absolute inset-0 bg-gradient-to-t from-black/20 to-transparent md:hidden"></div>
        </div>
        <div class="md:w-2/3 p-6 flex flex-col justify-between">
          <div>
            <div class="flex items-center gap-4 mb-3 text-sm text-gray-500 dark:text-gray-400">
              <time class="flex items-center">
                <span class="icon-[bx--calendar] w-4 h-4 mr-1"></span>
                {formatDate(post.data.pubDate)}
              </time>
            </div>
            
            <h2 class="text-lg md:text-xl lg:text-2xl font-bold text-gray-900 dark:text-white mb-4 group-hover:text-blue-600 dark:group-hover:text-blue-400 transition-colors line-clamp-2 leading-tight">
              {post.data.title}
            </h2>
            
            {post.data.description && (
              <p class="text-sm md:text-base text-gray-600 dark:text-gray-300 leading-relaxed line-clamp-3 mb-4">
                {post.data.description}
              </p>
            )}
          </div>
          
          <div class="flex items-center justify-between">
            {post.data.tags && post.data.tags.length > 0 && (
              <div class="flex flex-wrap gap-2">
                {post.data.tags.slice(0, 3).map((tag) => (
                  <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800 dark:bg-blue-200 dark:text-blue-800">
                    {tag}
                  </span>
                ))}
                {post.data.tags.length > 3 && (
                  <span class="text-xs text-gray-500 dark:text-gray-400">
                    +{post.data.tags.length - 3} more
                  </span>
                )} 
              </div>
            )}
            
            <div class="flex items-center text-blue-600 dark:text-blue-400 text-sm font-medium">
              <span class="icon-[line-md--arrow-right] w-4 h-4 ml-1 transform group-hover:translate-x-1 transition-transform"></span>
            </div>
          </div>
        </div>
      </div>
    ) : (
      <div class="p-6">
        <div class="flex items-center gap-4 mb-3 text-sm text-gray-500 dark:text-gray-400">
          <time class="flex items-center">
            <span class="icon-[bx--calendar] w-4 h-4 mr-1"></span>
            {formatDate(post.data.pubDate)}
          </time>
        </div>
        
        <h2 class="text-lg md:text-xl lg:text-2xl font-bold text-gray-900 dark:text-white mb-4 group-hover:text-blue-600 dark:group-hover:text-blue-400 transition-colors leading-tight">
          {post.data.title}
        </h2>
        
        {post.data.description && (
          <p class="text-sm md:text-base text-gray-600 dark:text-gray-300 leading-relaxed mb-4">
            {post.data.description}
          </p>
        )}
        
        <div class="flex items-center justify-between">
          {post.data.tags && post.data.tags.length > 0 && (
            <div class="flex flex-wrap gap-2">
              {post.data.tags.slice(0, 4).map((tag) => (
                <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-blue-100 text-blue-800 dark:bg-blue-200 dark:text-blue-800">
                  {tag}
                </span>
              ))}
              {post.data.tags.length > 4 && (
                <span class="text-xs text-gray-500 dark:text-gray-400">
                  +{post.data.tags.length - 4} more
                </span>
              )}
            </div>
          )}
          
          <div class="flex items-center text-blue-600 dark:text-blue-400 text-sm font-medium">
            <span class="icon-[line-md--arrow-right] w-4 h-4 ml-1 transform group-hover:translate-x-1 transition-transform"></span>
          </div>
        </div>
      </div>
    )}
  </a>
</article>
